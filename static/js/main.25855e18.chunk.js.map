{"version":3,"sources":["components/Home.js","components/Navbar.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","Navbar","href","target","fontSize","About","loop","Infinity","wrapper","steps","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4VAoBeA,MAjBf,WACE,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,2BACE,4DACA,6BACA,6BAHF,4D,0CCmCKC,MApCf,WAQE,OACE,yBAAKD,UAAU,UACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,kBAAf,QACA,yBAAKA,UAAU,kBAAf,SACA,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBAAf,WAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,2DAEF,uBAAGE,KAAK,qCAAqCC,OAAO,UAClD,yBAAKH,UAAU,gBACb,kBAAC,IAAD,CAAeI,SAAS,YAG5B,yBAAKJ,UAAU,gBAAf,MACA,uBAAGE,KAAK,kCAAkCC,OAAO,UAC/C,yBAAKH,UAAU,gBACb,kBAAC,IAAD,CAAYI,SAAS,e,gBCOlBC,MAtCf,WACE,OACE,yBAAKL,UAAU,SACb,wCACA,6NAIE,6BACA,6BALF,qHAOmD,IACjD,8EARF,gBASE,6BACA,6BAVF,qBAYqB,IACnB,kBAAC,IAAD,CACEM,KAAMC,IACNC,QAAS,IACTC,MAAO,CACL,aACA,KACA,eACA,KACA,SACA,KACA,WACA,KACA,WACA,WCfGC,MAZf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKV,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCDYW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.25855e18.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home_container\">\r\n        <div className=\"home__title\">\r\n          <p>\r\n            <h1>Hey, I am Nixon ðŸ‘‹</h1>\r\n            <br />\r\n            <br />\r\n            was a hardware engineer, starting my masters in 2021\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport { StylesProvider } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  const style = {\r\n    largeIcon: {\r\n      width: 60,\r\n      height: 60,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"navbar__top\">\r\n        <div className=\"navbar__button\">Home</div>\r\n        <div className=\"navbar__button\">About</div>\r\n        <div className=\"navbar__button\">Projects</div>\r\n        <div className=\"navbar__button\">Resume</div>\r\n      </div>\r\n      <div className=\"navbar__social\">\r\n        <div className=\"navbar__text\">\r\n          <p>Gimme a cheeky lil stalk at</p>\r\n        </div>\r\n        <a href=\"https://instagram.com/nickypangers\" target=\"_blank\">\r\n          <div className=\"navbar__link\">\r\n            <InstagramIcon fontSize=\"large\" />\r\n          </div>\r\n        </a>\r\n        <div className=\"navbar__text\">or</div>\r\n        <a href=\"https://github.com/nickypangers\" target=\"_blank\">\r\n          <div className=\"navbar__link\">\r\n            <GitHubIcon fontSize=\"large\" />\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\nimport Typical from \"react-typical\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"about\">\r\n      <h2>About Me</h2>\r\n      <p>\r\n        Hi, I'm Nixon. I am currently a Hardware Engineer in Hong Kong but am\r\n        going to start my masters degree in Embedded Systems Engineering at my\r\n        alma mater &ndash; University of Leeds in Jan 2021.\r\n        <br />\r\n        <br />\r\n        After studying abroad in the UK for 8 years, I graduated from the\r\n        University of Leeds with a 2:1 classification in{\" \"}\r\n        <strong>BEng Electronic and Electrical Engineering</strong> in Jul 2019.\r\n        <br />\r\n        <br />\r\n        {/* To implement typing animation for skills */}\r\n        My skills include:{\" \"}\r\n        <Typical\r\n          loop={Infinity}\r\n          wrapper={\"b\"}\r\n          steps={[\r\n            \"Embedded C\",\r\n            1500,\r\n            \"Dart/Flutter\",\r\n            1500,\r\n            \"Golang\",\r\n            1500,\r\n            \"React JS\",\r\n            1500,\r\n            \"HTML/CSS\",\r\n            1500,\r\n          ]}\r\n        />\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport About from \"./components/About\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Home />\r\n        <Navbar />\r\n        <About />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}